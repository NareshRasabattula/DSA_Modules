/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int cameras = 0;
    final int CAMERA = 1;
    final int MONITORED = 2;
    final int NOT_MONITORED = 3;

    public int minCameraCover(TreeNode root) {
        int status = helper(root);
        if(status == NOT_MONITORED){
            cameras++;
        }
        return cameras;
    }

    public int helper(TreeNode node){
        if(node == null){
            return MONITORED;
        }
        
        int left = helper(node.left);
        int right = helper(node.right);

        if(left == NOT_MONITORED || right == NOT_MONITORED){
            cameras++;
            return CAMERA;
        } else if(left == CAMERA || right == CAMERA){
           return MONITORED; 
        } else {
            return NOT_MONITORED;
        }
    }
}